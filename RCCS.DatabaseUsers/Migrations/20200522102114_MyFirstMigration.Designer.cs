// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RCCS.DatabaseUsers.Data;

namespace RCCS.DatabaseUsers.Migrations
{
    [DbContext(typeof(RCCSUsersContext))]
    [Migration("20200522102114_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RCCS.DatabaseUsers.Model.Entities.EfAdmin", b =>
                {
                    b.Property<long>("EfAdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EfUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("PersonaleId")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.HasKey("EfAdminId");

                    b.HasIndex("EfUserId");

                    b.HasIndex("PersonaleId")
                        .IsUnique()
                        .HasFilter("[PersonaleId] IS NOT NULL");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("RCCS.DatabaseUsers.Model.Entities.EfCoordinator", b =>
                {
                    b.Property<long>("EfCoordinatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EfUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("PersonaleId")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("EfCoordinatorId");

                    b.HasIndex("EfUserId");

                    b.HasIndex("PersonaleId")
                        .IsUnique()
                        .HasFilter("[PersonaleId] IS NOT NULL");

                    b.ToTable("Coordinators");
                });

            modelBuilder.Entity("RCCS.DatabaseUsers.Model.Entities.EfNursingStaff", b =>
                {
                    b.Property<long>("EfNursingStaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EfUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("PersonaleId")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("EfNursingStaffId");

                    b.HasIndex("EfUserId");

                    b.HasIndex("PersonaleId")
                        .IsUnique()
                        .HasFilter("[PersonaleId] IS NOT NULL");

                    b.ToTable("NursingStaffs");
                });

            modelBuilder.Entity("RCCS.DatabaseUsers.Model.Entities.EfUser", b =>
                {
                    b.Property<long>("EfUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonaleId")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("PwHash")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("EfUserId");

                    b.HasIndex("PersonaleId")
                        .IsUnique()
                        .HasFilter("[PersonaleId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RCCS.DatabaseUsers.Model.Entities.EfAdmin", b =>
                {
                    b.HasOne("RCCS.DatabaseUsers.Model.Entities.EfUser", "User")
                        .WithMany()
                        .HasForeignKey("EfUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RCCS.DatabaseUsers.Model.Entities.EfCoordinator", b =>
                {
                    b.HasOne("RCCS.DatabaseUsers.Model.Entities.EfUser", "User")
                        .WithMany()
                        .HasForeignKey("EfUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RCCS.DatabaseUsers.Model.Entities.EfNursingStaff", b =>
                {
                    b.HasOne("RCCS.DatabaseUsers.Model.Entities.EfUser", "User")
                        .WithMany()
                        .HasForeignKey("EfUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
